#!/bin/sh

VERSION=0.0.3

PYM_ROOT=${PYM_ROOT:-/opt}
PYM_PATH=${PYM_PATH:-/usr/local/bin}
tmpdir="${PYM_TMP:-/tmp}/`basename ${0}`.$$"

usage() {
    cat <<EOF
$(basename ${0}) is a simple manager of python interpreter.

Version:
    ${VERSION}

Usage:
    install <version>            Install a Python version in "${PYM_ROOT}"
    link <version>               Create symlink from specified version's python to "${PYM_PATH}"
    venv <version> [<dirname>]   Create virtualenv using pyvenv or virtualenv

Environment variables:
    PYM_ROOT : An installed python interpreter path  (default: "/opt")
    PYM_PATH : A created symlink path                (default: "/usr/local/bin")
    PYM_TMP  : A path to store temporary file        (default: "/tmp")

Options:
    --version, -v      print $(basename ${0}) version
    --help, -h         print this

Example:
    $ sudo $(basename ${0}) install 3.5.0
    $ sudo $(basename ${0}) link 3.5.0
    $ $(basename ${0}) link 3.5 venv
EOF
}

version() {
    echo "$(basename ${0}) version ${VERSION} "
}

install() {
    if ! [ -w ${PYM_ROOT} ]; then
        echo "Permission denied at ${PYM_ROOT} "
        exit 2
    fi

    mkdir -p ${tmpdir}
    wget "https://www.python.org/ftp/python/${1}/Python-${1}.tgz" -P ${tmpdir}
    tar zxvf "${tmpdir}/Python-${1}.tgz" -C ${tmpdir}
    pushd "${tmpdir}/Python-${1}" > /dev/null 2>&1
    ./configure --prefix=/${PYM_ROOT}/python-${1}
    make
    make install
    popd > /dev/null 2>&1
    trap 'rm -r ${tmpdir}' 0
    echo "Python $1 is successfully installed under the ${PYM_ROOT}"
}

link() {
    if ! [ -w ${PYM_PATH} ]; then
        echo "Permision denied at ${PYM_PATH} "
        exit 2
    fi

    minor_ver=$(echo ${1} | cut -d '.' -f 1-2)
    ln -s ${PYM_ROOT}/python-${1}/bin/python${minor_ver} ${PYM_PATH}
    echo "Symlink created! Please confirm \"which python${minor_ver}\""
}

venv() {
    if ! type python${1} > /dev/null 2>&1; then
        echo "python${1} is not found."
        exit 2
    elif [ ! -d ${2} ]; then
        mkdir -p ${2}
    fi

    if [ `echo ${1} | cut -d '.' -f 1` = "3" ]; then
        python${1} -m venv ${2}
    else
        virtualenv -p python${1} ${2}
    fi
    echo "Virtualenv created!"
}

case "$1" in
    install|i)
        install $2
        ;;
    link|l)
        link $2
        ;;
    venv|v)
        venv $2 $3
        ;;
    version|--version|-v)
        version
        ;;
    help|--help|-h)
        usage
        ;;
    *)
        echo "[Error] Invalid subcommand '${1}'"
        usage
        exit 2
        ;;
esac

