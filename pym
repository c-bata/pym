#!/bin/sh

VERSION=0.0.6

PYM_ROOT=${PYM_ROOT:-/opt}
PYM_PATH=${PYM_PATH:-$HOME/bin}
tmpdir="${PYM_TMP:-/tmp}/`basename ${0}`.$$"

usage() {
    cat <<EOF
$(basename ${0}) is a simple manager of python interpreter.

Version:
    ${VERSION}

Usage:
    install <version>            Install a Python version in "${PYM_ROOT}"
    link <version>               Create symlink from specified version's python to "${PYM_PATH}"
    venv <version> [<dirname>]   Create virtualenv using pyvenv or virtualenv

Environment variables:
    PYM_ROOT : The path where the interpreters are installed to.  (default: "${PYM_ROOT}")
    PYM_PATH : The path where the scripts are symlinked to.       (default: "${PYM_PATH}")
    PYM_TMP  : The folder to store temporary file.                (default: "${PYM_TMP}")

Options:
    --version, -v      print $(basename ${0}) version
    --help, -h         print this

Example:
    $ sudo $(basename ${0}) install 3.5.0
    $ sudo $(basename ${0}) link 3.5.0
    $ $(basename ${0}) link 3.5 venv
EOF
}

version() {
    echo "$(basename ${0}) version ${VERSION} "
}

installed() {
    for py in $(ls ${PYM_ROOT} | grep "py.*"); do
        echo ${py} | sed "s/python-//"
    done
}

linked() {
    for py in $(ls ${PYM_PATH}/python?.?); do
        echo $(basename ${py}) | sed "s/python//"
    done
}

install() {
    case ${1} in
        [0-9\.]*)
            if ! [ -w ${PYM_ROOT} ]; then
                echo "Permission denied at ${PYM_ROOT} "
                exit 1
            fi

            mkdir -p ${tmpdir}
            wget "https://www.python.org/ftp/python/${1}/Python-${1}.tgz" -P ${tmpdir}
            tar zxvf "${tmpdir}/Python-${1}.tgz" -C ${tmpdir}
            pushd "${tmpdir}/Python-${1}" > /dev/null 2>&1
            ./configure --prefix=${PYM_ROOT}/python-${1}
            make
            make install
            popd > /dev/null 2>&1
            trap 'rm -r ${tmpdir}' 0

            if [ ! -d ${PYM_ROOT}/python-${1} ]; then
                echo "Failure..."
                exit 1
            fi
            echo "Python $1 is successfully installed under the \"${PYM_ROOT}/\""
            ;;
        *)
            echo "[Error] Invalid argument."
            exit 1
            ;;
    esac
}

link() {
    case ${1} in
        [0-9\.]*)
            if ! [ -w ${PYM_PATH} ]; then
                echo "Permision denied at ${PYM_PATH} "
                exit 1
            fi

            minor_ver=$(echo ${1} | cut -d '.' -f 1-2)

            if [ -f ${PYM_PATH}/python${minor_ver} ]; then
                rm ${PYM_PATH}/python${minor_ver}
            fi
            ln -s ${PYM_ROOT}/python-${1}/bin/python${minor_ver} ${PYM_PATH}

            if [ ! -f ${PYM_PATH}/python${minor_ver} ]; then
                echo "Failure..."
                exit 1
            fi
            echo "Symlink created! Please confirm \"which python${minor_ver}\""
            ;;
        --list|-l)
            installed
            ;;
        *)
            echo "[Error] Invalid argument."
            echo "Please try \"link --list\""
            exit 1
            ;;
    esac
}

venv() {
    case ${1} in
        [0-9\.]*)
            if ! type python${1} > /dev/null 2>&1; then
                echo "python${1} is not found."
                exit 1
            elif [ ! -d ${2} ]; then
                mkdir -p ${2}
            fi

            if [ `echo ${1} | cut -d '.' -f 1` = "3" ]; then
                python${1} -m venv ${2}
            else
                virtualenv -p python${1} ${2}
            fi
            echo "Virtualenv created!"
            ;;
        --list|-l)
            linked
            ;;
        *)
            echo "[Error] Invalid argument."
            exit 1
            ;;
    esac
}

case "$1" in
    install|i)
        install $2
        ;;
    link|l)
        link $2
        ;;
    venv|v)
        venv $2 $3
        ;;
    version|--version|-v)
        version
        ;;
    help|--help|-h)
        usage
        ;;
    *)
        echo "[Error] Invalid subcommand '${1}'"
        usage
        exit 1
        ;;
esac

